import java.util.LinkedList;

public class Solution {
	
	static class ListNode {
		int val;
		ListNode next;

		ListNode() {
		}

		ListNode(int val) {
			this.val = val;
		}

		ListNode(int val, ListNode next) {
			this.val = val;
			this.next = next;
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		ListNode list1 = new ListNode(2, new ListNode(4, new ListNode(3)));
		ListNode list2 = new ListNode(5, new ListNode(6, new ListNode(4)));
		
		ListNode result = addTwoNumbers(list1, list2);
		
		System.out.println("result>> " + result.val);
		
//		while(result.next != null) {
//			System.out.println("val >> " + result.val);
//			result = result.next;
//		}
	}
	

	public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {

		ListNode result = new ListNode();
		int val = 0;
		int carry = 0;

		while (l1.next != null || l2.next != null) {

			val = (l1.val + l2.val + carry) % 10;
			result.val = val + carry;
			result = result.next;

			carry = (l1.val + l2.val + carry) / 10;
			
			System.out.printf("val : %d , carry : %d\n", val, carry);

			l1 = l1.next;
			l2 = l2.next;
		}
		
		return result;
	}
	


}